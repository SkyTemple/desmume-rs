name: Build, test and publish

on: [push, pull_request]

jobs:
  build_linux:
    runs-on: ubuntu-latest
    name: Build Linux
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install meson, SDL, etc.
        run: |
          sudo apt-get update
          sudo apt-get install python3 python3-pip python3-setuptools python3-wheel ninja-build libsdl2-dev libsdl2-2.0-0 libpcap0.8-dev
          sudo pip3 install meson
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
  build_macos_windows:
    runs-on: ${{ matrix.os }}
    name: Build Mac/Windows
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            target: i686-pc-windows-msvc
          - os: windows-2019
            target: x86_64-pc-windows-msvc
          - os: macos-10.15
            target: x86_64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install MacOS build deps
        if: matrix.os == 'macos-10.15'
        run: |
          brew install coreutils gcc sdl2 meson glib
      - name: Add msbuild to PATH
        if: matrix.os == 'windows-2019'
        uses: microsoft/setup-msbuild@v1.0.2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true
          default: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
        env:
          TARGET: ${{ matrix.target }}
          FASTBUILD: "1"
  build_mingw:
    runs-on: windows-2019
    name: Build Windows GNU
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: MINGW64, arch: x86_64, path: mingw64, target: x86_64-pc-windows-gnu },
          { msystem: MINGW32, arch: i686, path: mingw32, target: i686-pc-windows-gnu }
        ]
    steps:
      - name: Install MSys2 and dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ${{ matrix.msystem }}
          install: >-
            git
            unzip
            mingw-w64-${{ matrix.arch }}-curl
            mingw-w64-${{ matrix.arch }}-openssl
            mingw-w64-${{ matrix.arch }}-toolchain
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Add VS to path
        shell: powershell
        run: |
          echo "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true
          default: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
        env:
          TARGET: ${{ matrix.target }}
          FASTBUILD: "1"
