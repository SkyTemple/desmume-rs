name: Build and test

on: [push, pull_request]

jobs:
  package-main:
    runs-on: ubuntu-latest
    name: Test package desmume-rs
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # we don't verify, since the build is covered by other tests.
      - name: Test packaging desmume-rs
        run: cargo package --no-verify -p desmume-rs
  package-sys:
    runs-on: ubuntu-latest
    name: Test package desmume-sys
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # we don't verify, since the build is covered by other tests.
      - name: Test packaging desmume-sys
        run: cargo package --no-verify -p desmume-sys
  tests:
    runs-on: ${{ matrix.os }}
    name: Test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            target: i686-pc-windows-msvc
            arch: x86
          - os: windows-2019
            target: x86_64-pc-windows-msvc
            arch: x64
          - os: macos-11
            target: x86_64-apple-darwin
            arch: x64
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            arch: x64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install MacOS build deps
        if: matrix.os == 'macos-11'
        run: |
          brew install coreutils gcc sdl2 meson glib
      - name: "MacOS: Set env"
        if: matrix.os == 'macos-11'
        run: |
          CC=gcc-10 >> $GITHUB_ENV
          CXX=g++-10 >> $GITHUB_ENV
      - name: Add msbuild to PATH
        if: matrix.os == 'windows-2019'
        uses: microsoft/setup-msbuild@v2
      - name: Install meson, SDL, etc.
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install python3 python3-pip python3-setuptools python3-wheel ninja-build libsdl2-dev libsdl2-2.0-0 libpcap0.8-dev
          sudo pip3 install meson
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          default: true

      # I don't know why but actions-rs seems to like not ACTUALLY setting the target
      - name: Set target
        run: rustup default stable-${{ matrix.target }}

      # With Windows we need to make sure SDL2.dll is in the PATH
      - name: Add SDL2.dll to PATH
        if: matrix.os == 'windows-2019'
        run: echo "$PWD\desmume_sys\desmume\desmume\src\frontend\interface\windows\SDL\lib\${{ matrix.arch }}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Run cargo test
        run: cargo test
        env:
          SDL_VIDEODRIVER: dummy
          TARGET: ${{ matrix.target }}

  build:
    runs-on: ${{ matrix.os }}
    name: Build
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            target: i686-pc-windows-msvc
          - os: windows-2019
            target: x86_64-pc-windows-msvc
          - os: macos-11
            target: x86_64-apple-darwin
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install MacOS build deps
        if: matrix.os == 'macos-11'
        run: |
          brew install coreutils gcc sdl2 meson glib
      - name: "MacOS: Set env"
        if: matrix.os == 'macos-11'
        run: |
          CC=gcc-10 >> $GITHUB_ENV
          CXX=g++-10 >> $GITHUB_ENV
      - name: Add msbuild to PATH
        if: matrix.os == 'windows-2019'
        uses: microsoft/setup-msbuild@v2
      - name: Install meson, SDL, etc.
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install python3 python3-pip python3-setuptools python3-wheel ninja-build libsdl2-dev libsdl2-2.0-0 libpcap0.8-dev
          sudo pip3 install meson

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          default: true

      # I don't know why but actions-rs seems to like not ACTUALLY setting the target
      - name: Set target
        run: rustup default stable-${{ matrix.target }}

      # Remove all files that the exclude statement in Cargo.toml of desmume-sys removes.
      - name: Remove excluded
        if: matrix.os != 'windows-2019'
        run: |
          rm -rf desmume_sys/desmume/desmume/src/frontend/cocoa
          rm -rf desmume_sys/desmume/desmume/src/frontend/windows/File_Extractor
          rm -rf desmume_sys/desmume/desmume/src/frontend/windows/directx
      - name: Remove excluded
        if: matrix.os == 'windows-2019'
        run: |
          rm -r -force desmume_sys/desmume/desmume/src/frontend/cocoa
          rm -r -force desmume_sys/desmume/desmume/src/frontend/windows/File_Extractor
          rm -r -force desmume_sys/desmume/desmume/src/frontend/windows/directx

      - name: Build
        run: cargo build -vv --release
        env:
          TARGET: ${{ matrix.target }}
